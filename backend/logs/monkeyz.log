{"timestamp": "2025-09-05T11:35:27.196077Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T11:35:27.197003Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T11:35:27.380901Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T11:35:27.381946Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T11:35:27.382844Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T11:35:31.272153Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T11:35:31.272771Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T11:35:31.273404Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T11:35:32.123170Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T12:35:07.740300Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T12:35:07.740693Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T12:35:07.832054Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T12:35:07.832882Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T12:35:07.833447Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T12:35:08.982084Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T12:35:08.982457Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T12:35:08.982943Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T12:35:09.770248Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T12:40:13.496466Z", "level": "INFO", "logger": "main", "message": "Starting application shutdown...", "module": "main", "function": "shutdown_event", "line": 230}
{"timestamp": "2025-09-05T12:40:13.496990Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Cleaning up database connections...", "module": "database_manager", "function": "cleanup_database", "line": 347}
{"timestamp": "2025-09-05T12:40:13.572607Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database cleanup completed", "module": "database_manager", "function": "cleanup_database", "line": 349}
{"timestamp": "2025-09-05T12:40:13.573216Z", "level": "INFO", "logger": "main", "message": "Application shutdown completed", "module": "main", "function": "shutdown_event", "line": 232}
{"timestamp": "2025-09-05T12:40:22.345229Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T12:40:22.345532Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T12:40:22.427375Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T12:40:22.427887Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T12:40:22.428214Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T12:40:23.506598Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T12:40:23.506966Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T12:40:23.507420Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T12:40:24.283777Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T13:39:17.913138Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T13:39:17.913580Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T13:39:17.968834Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T13:39:17.969072Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T13:39:17.969289Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T13:39:19.580410Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T13:39:19.580856Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T13:39:19.581389Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T13:39:20.391556Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T13:51:49.704432Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T13:51:49.704691Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T13:51:49.761809Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T13:51:49.762166Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T13:51:49.762508Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T13:51:50.897375Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T13:51:50.898072Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T13:51:50.898907Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T13:51:51.722291Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T15:05:03.468767Z", "level": "INFO", "logger": "main", "message": "Starting application shutdown...", "module": "main", "function": "shutdown_event", "line": 230}
{"timestamp": "2025-09-05T15:05:03.469660Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Cleaning up database connections...", "module": "database_manager", "function": "cleanup_database", "line": 347}
{"timestamp": "2025-09-05T15:05:03.543044Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database cleanup completed", "module": "database_manager", "function": "cleanup_database", "line": 349}
{"timestamp": "2025-09-05T15:05:03.543646Z", "level": "INFO", "logger": "main", "message": "Application shutdown completed", "module": "main", "function": "shutdown_event", "line": 232}
{"timestamp": "2025-09-05T15:05:12.900617Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-05T15:05:12.901252Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-05T15:05:13.023086Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-05T15:05:13.023875Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-05T15:05:13.024534Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-05T15:05:14.172103Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-05T15:05:14.173115Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-05T15:05:14.175772Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-05T15:05:14.990193Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-05T15:05:43.779401Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'tes', 'amount': 4, 'email': None}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-05T15:05:43.779976Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=tes, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-05T15:05:43.861330Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-05T15:05:43.861971Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-05T15:05:43.862506Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-05T15:05:43.863564Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=tes, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-05T15:05:43.864239Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-05T15:05:43.865039Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='tes', total=4, email='None'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-05T15:05:43.865836Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-05T15:05:43.866576Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'tes' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-05T15:05:43.941861Z", "level": "WARNING", "logger": "src.services.coupon_service", "message": "Coupon not found: 'tes'", "module": "coupon_service", "function": "validate_coupon", "line": 347}
{"timestamp": "2025-09-05T15:05:43.942351Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=0.0, coupon=False, error='Coupon code 'tes' not found or not active.'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-05T15:05:43.942747Z", "level": "WARNING", "logger": "src.routers.orders", "message": "\ud83d\udea8 Coupon validation FAILED: Coupon code 'tes' not found or not active.", "module": "orders", "function": "validate_coupon_public", "line": 329}
{"timestamp": "2025-09-05T15:05:47.159661Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': None}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-05T15:05:47.160373Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-05T15:05:47.231513Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-05T15:05:47.232542Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-05T15:05:47.233563Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-05T15:05:47.234206Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-05T15:05:47.234791Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-05T15:05:47.235431Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='None'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-05T15:05:47.235989Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-05T15:05:47.236735Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-05T15:05:47.307184Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-05T15:05:47.308699Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-05T15:05:47.309572Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-05T15:05:47.310088Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-05T15:05:47.310725Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-05T15:05:47.311493Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-05T15:05:47.312626Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-05T15:05:47.313570Z", "level": "WARNING", "logger": "src.services.coupon_service", "message": "\ufffd BLOCKED: No email provided for per-user coupon", "module": "coupon_service", "function": "validate_coupon", "line": 395}
{"timestamp": "2025-09-05T15:05:47.314295Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=0.0, coupon=False, error='This coupon requires an email address. Please enter your email first.'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-05T15:05:47.314997Z", "level": "WARNING", "logger": "src.routers.orders", "message": "\ud83d\udea8 Coupon validation FAILED: This coupon requires an email address. Please enter your email first.", "module": "orders", "function": "validate_coupon_public", "line": 329}
{"timestamp": "2025-09-05T15:09:24.006439Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login attempt with: evya00", "module": "users_collection", "function": "login", "line": 102}
{"timestamp": "2025-09-05T15:09:24.007312Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Attempting to find user by username: evya00", "module": "users_collection", "function": "login", "line": 120}
{"timestamp": "2025-09-05T15:09:24.084851Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "User found, verifying password for user: evya00", "module": "users_collection", "function": "login", "line": 134}
{"timestamp": "2025-09-05T15:09:24.786211Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login successful for user: evya00", "module": "users_collection", "function": "login", "line": 139}
{"timestamp": "2025-09-06T17:27:52.394881Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-06T17:27:52.396050Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-06T17:27:52.561878Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-06T17:27:52.563221Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-06T17:27:52.563871Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-06T17:27:53.882697Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-06T17:27:53.883238Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-06T17:27:53.884036Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-06T17:27:54.649946Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-06T17:28:21.648187Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-06T19:14:12.655495Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'tews', 'amount': 4, 'email': None}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:12.657097Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=tews, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:12.751087Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:12.751662Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:12.752443Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:12.755440Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=tews, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:12.756051Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:12.756555Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='tews', total=4, email='None'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:12.757164Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:12.758143Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'tews' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:12.827681Z", "level": "WARNING", "logger": "src.services.coupon_service", "message": "Coupon not found: 'tews'", "module": "coupon_service", "function": "validate_coupon", "line": 347}
{"timestamp": "2025-09-06T19:14:12.831145Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=0.0, coupon=False, error='Coupon code 'tews' not found or not active.'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:12.831828Z", "level": "WARNING", "logger": "src.routers.orders", "message": "\ud83d\udea8 Coupon validation FAILED: Coupon code 'tews' not found or not active.", "module": "orders", "function": "validate_coupon_public", "line": 329}
{"timestamp": "2025-09-06T19:14:17.021620Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': None}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:17.021854Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:17.087331Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:17.087853Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:17.088403Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:17.088886Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=None", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:17.089182Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:17.089514Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='None'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:17.089901Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:17.090342Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:17.156783Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-06T19:14:17.157928Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-06T19:14:17.158341Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-06T19:14:17.158603Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-06T19:14:17.159098Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-06T19:14:17.159394Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-06T19:14:17.159746Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-06T19:14:17.159838Z", "level": "WARNING", "logger": "src.services.coupon_service", "message": "\ufffd BLOCKED: No email provided for per-user coupon", "module": "coupon_service", "function": "validate_coupon", "line": 395}
{"timestamp": "2025-09-06T19:14:17.160312Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=0.0, coupon=False, error='This coupon requires an email address. Please enter your email first.'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:17.160432Z", "level": "WARNING", "logger": "src.routers.orders", "message": "\ud83d\udea8 Coupon validation FAILED: This coupon requires an email address. Please enter your email first.", "module": "orders", "function": "validate_coupon_public", "line": 329}
{"timestamp": "2025-09-06T19:14:20.002835Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': 'basicusageil@gmail.com'}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:20.003026Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=basicusageil@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:20.068772Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:20.069027Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:20.069395Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:20.069684Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=basicusageil@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:20.069951Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:20.070185Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='basicusageil@gmail.com'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:20.070333Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:20.070574Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:20.136357Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-06T19:14:20.136938Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-06T19:14:20.137356Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-06T19:14:20.137733Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-06T19:14:20.138078Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-06T19:14:20.138531Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-06T19:14:20.138870Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-06T19:14:20.139847Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d ULTRA-RELIABLE USER COUNT: email='basicusageil@gmail.com', coupon='test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 79}
{"timestamp": "2025-09-06T19:14:20.525725Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "   \ud83d\udd04 No exact matches, trying case-insensitive regex...", "module": "coupon_service", "function": "get_user_usage_count", "line": 135}
{"timestamp": "2025-09-06T19:14:20.655028Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 TOTAL UNIQUE ORDERS FOUND: 0", "module": "coupon_service", "function": "get_user_usage_count", "line": 159}
{"timestamp": "2025-09-06T19:14:20.655514Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 USER CLEAN: basicusageil@gmail.com has NOT used 'test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 173}
{"timestamp": "2025-09-06T19:14:20.656013Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE QUERY: User basicusageil@gmail.com usage: 0", "module": "coupon_service", "function": "validate_coupon", "line": 414}
{"timestamp": "2025-09-06T19:14:20.656431Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf CRITICAL CHECK: User basicusageil@gmail.com usage: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 416}
{"timestamp": "2025-09-06T19:14:20.656820Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Per-user limit check: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 426}
{"timestamp": "2025-09-06T19:14:20.657201Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d STORED usage count: 1", "module": "coupon_service", "function": "validate_coupon", "line": 436}
{"timestamp": "2025-09-06T19:14:20.722809Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Real usage count for coupon 'test60': 0 orders found", "module": "coupon_service", "function": "get_real_usage_count", "line": 64}
{"timestamp": "2025-09-06T19:14:20.723302Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE usage count: 0", "module": "coupon_service", "function": "validate_coupon", "line": 440}
{"timestamp": "2025-09-06T19:14:20.724405Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf FINAL USAGE COUNT: 1 (stored: 1, db: 0)", "module": "coupon_service", "function": "validate_coupon", "line": 444}
{"timestamp": "2025-09-06T19:14:20.724845Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "VALIDATE_COUPON: Max usage check for 'test60': 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 446}
{"timestamp": "2025-09-06T19:14:20.725285Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Overall usage check: 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 453}
{"timestamp": "2025-09-06T19:14:20.725641Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Calculating discount: type=percentage, value=60.0, total=4", "module": "coupon_service", "function": "validate_coupon", "line": 461}
{"timestamp": "2025-09-06T19:14:20.725942Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON SUCCESS ===", "module": "coupon_service", "function": "validate_coupon", "line": 471}
{"timestamp": "2025-09-06T19:14:20.726792Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Returning: discount=2.4, coupon_code='test60', error=None", "module": "coupon_service", "function": "validate_coupon", "line": 472}
{"timestamp": "2025-09-06T19:14:20.727248Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=2.4, coupon=True, error='None'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:20.727670Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf Coupon details: maxUsagePerUser=1, maxUses=2", "module": "orders", "function": "validate_coupon_public", "line": 317}
{"timestamp": "2025-09-06T19:14:20.728098Z", "level": "INFO", "logger": "src.routers.orders", "message": "\u2705 Coupon validation SUCCESSFUL: discount=2.4", "module": "orders", "function": "validate_coupon_public", "line": 337}
{"timestamp": "2025-09-06T19:14:22.436062Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': 'basicusageil@gmail.com'}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:22.436721Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=basicusageil@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:22.501777Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:22.502204Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:22.502673Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:22.502979Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=basicusageil@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:22.503262Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:22.503547Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='basicusageil@gmail.com'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:22.503789Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:22.504079Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:22.573401Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-06T19:14:22.574557Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-06T19:14:22.575496Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-06T19:14:22.576434Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-06T19:14:22.577348Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-06T19:14:22.578232Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-06T19:14:22.578921Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-06T19:14:22.579868Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d ULTRA-RELIABLE USER COUNT: email='basicusageil@gmail.com', coupon='test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 79}
{"timestamp": "2025-09-06T19:14:22.976709Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "   \ud83d\udd04 No exact matches, trying case-insensitive regex...", "module": "coupon_service", "function": "get_user_usage_count", "line": 135}
{"timestamp": "2025-09-06T19:14:23.110945Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 TOTAL UNIQUE ORDERS FOUND: 0", "module": "coupon_service", "function": "get_user_usage_count", "line": 159}
{"timestamp": "2025-09-06T19:14:23.111293Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 USER CLEAN: basicusageil@gmail.com has NOT used 'test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 173}
{"timestamp": "2025-09-06T19:14:23.111520Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE QUERY: User basicusageil@gmail.com usage: 0", "module": "coupon_service", "function": "validate_coupon", "line": 414}
{"timestamp": "2025-09-06T19:14:23.111713Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf CRITICAL CHECK: User basicusageil@gmail.com usage: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 416}
{"timestamp": "2025-09-06T19:14:23.111878Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Per-user limit check: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 426}
{"timestamp": "2025-09-06T19:14:23.112224Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d STORED usage count: 1", "module": "coupon_service", "function": "validate_coupon", "line": 436}
{"timestamp": "2025-09-06T19:14:23.180420Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Real usage count for coupon 'test60': 0 orders found", "module": "coupon_service", "function": "get_real_usage_count", "line": 64}
{"timestamp": "2025-09-06T19:14:23.180990Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE usage count: 0", "module": "coupon_service", "function": "validate_coupon", "line": 440}
{"timestamp": "2025-09-06T19:14:23.181469Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf FINAL USAGE COUNT: 1 (stored: 1, db: 0)", "module": "coupon_service", "function": "validate_coupon", "line": 444}
{"timestamp": "2025-09-06T19:14:23.181946Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "VALIDATE_COUPON: Max usage check for 'test60': 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 446}
{"timestamp": "2025-09-06T19:14:23.182479Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Overall usage check: 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 453}
{"timestamp": "2025-09-06T19:14:23.182915Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Calculating discount: type=percentage, value=60.0, total=4", "module": "coupon_service", "function": "validate_coupon", "line": 461}
{"timestamp": "2025-09-06T19:14:23.183229Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON SUCCESS ===", "module": "coupon_service", "function": "validate_coupon", "line": 471}
{"timestamp": "2025-09-06T19:14:23.183565Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Returning: discount=2.4, coupon_code='test60', error=None", "module": "coupon_service", "function": "validate_coupon", "line": 472}
{"timestamp": "2025-09-06T19:14:23.184427Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=2.4, coupon=True, error='None'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:23.184883Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf Coupon details: maxUsagePerUser=1, maxUses=2", "module": "orders", "function": "validate_coupon_public", "line": 317}
{"timestamp": "2025-09-06T19:14:23.185490Z", "level": "INFO", "logger": "src.routers.orders", "message": "\u2705 Coupon validation SUCCESSFUL: discount=2.4", "module": "orders", "function": "validate_coupon_public", "line": 337}
{"timestamp": "2025-09-06T19:14:24.013666Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': 'basicusageil@gmail.co'}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:24.013978Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=basicusageil@gmail.co", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:24.077957Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:24.078471Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:24.078934Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:24.079506Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=basicusageil@gmail.co", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:24.079936Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:24.080331Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='basicusageil@gmail.co'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:24.080705Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:24.081210Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:24.146346Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-06T19:14:24.146834Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-06T19:14:24.147236Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-06T19:14:24.147650Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-06T19:14:24.147960Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-06T19:14:24.148195Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-06T19:14:24.148361Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-06T19:14:24.148622Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d ULTRA-RELIABLE USER COUNT: email='basicusageil@gmail.co', coupon='test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 79}
{"timestamp": "2025-09-06T19:14:24.533371Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "   \ud83d\udd04 No exact matches, trying case-insensitive regex...", "module": "coupon_service", "function": "get_user_usage_count", "line": 135}
{"timestamp": "2025-09-06T19:14:24.665034Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 TOTAL UNIQUE ORDERS FOUND: 0", "module": "coupon_service", "function": "get_user_usage_count", "line": 159}
{"timestamp": "2025-09-06T19:14:24.665506Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 USER CLEAN: basicusageil@gmail.co has NOT used 'test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 173}
{"timestamp": "2025-09-06T19:14:24.665969Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE QUERY: User basicusageil@gmail.co usage: 0", "module": "coupon_service", "function": "validate_coupon", "line": 414}
{"timestamp": "2025-09-06T19:14:24.666457Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf CRITICAL CHECK: User basicusageil@gmail.co usage: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 416}
{"timestamp": "2025-09-06T19:14:24.666936Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Per-user limit check: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 426}
{"timestamp": "2025-09-06T19:14:24.667424Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d STORED usage count: 1", "module": "coupon_service", "function": "validate_coupon", "line": 436}
{"timestamp": "2025-09-06T19:14:24.732487Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Real usage count for coupon 'test60': 0 orders found", "module": "coupon_service", "function": "get_real_usage_count", "line": 64}
{"timestamp": "2025-09-06T19:14:24.732802Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE usage count: 0", "module": "coupon_service", "function": "validate_coupon", "line": 440}
{"timestamp": "2025-09-06T19:14:24.733039Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf FINAL USAGE COUNT: 1 (stored: 1, db: 0)", "module": "coupon_service", "function": "validate_coupon", "line": 444}
{"timestamp": "2025-09-06T19:14:24.733380Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "VALIDATE_COUPON: Max usage check for 'test60': 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 446}
{"timestamp": "2025-09-06T19:14:24.733598Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Overall usage check: 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 453}
{"timestamp": "2025-09-06T19:14:24.733869Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Calculating discount: type=percentage, value=60.0, total=4", "module": "coupon_service", "function": "validate_coupon", "line": 461}
{"timestamp": "2025-09-06T19:14:24.734093Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON SUCCESS ===", "module": "coupon_service", "function": "validate_coupon", "line": 471}
{"timestamp": "2025-09-06T19:14:24.734289Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Returning: discount=2.4, coupon_code='test60', error=None", "module": "coupon_service", "function": "validate_coupon", "line": 472}
{"timestamp": "2025-09-06T19:14:24.734473Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=2.4, coupon=True, error='None'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:24.734753Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf Coupon details: maxUsagePerUser=1, maxUses=2", "module": "orders", "function": "validate_coupon_public", "line": 317}
{"timestamp": "2025-09-06T19:14:24.735013Z", "level": "INFO", "logger": "src.routers.orders", "message": "\u2705 Coupon validation SUCCESSFUL: discount=2.4", "module": "orders", "function": "validate_coupon_public", "line": 337}
{"timestamp": "2025-09-06T19:14:36.111733Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupon validation request: {'code': 'test60', 'amount': 4, 'email': 'mrbrownaffilate@gmail.com'}", "module": "orders", "function": "validate_coupon_public", "line": 257}
{"timestamp": "2025-09-06T19:14:36.112367Z", "level": "INFO", "logger": "src.routers.orders", "message": "Attempting to validate coupon: code=test60, amount=4, email=mrbrownaffilate@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 272}
{"timestamp": "2025-09-06T19:14:36.176503Z", "level": "INFO", "logger": "src.routers.orders", "message": "Coupons in 'admin' database: 2", "module": "orders", "function": "validate_coupon_public", "line": 288}
{"timestamp": "2025-09-06T19:14:36.177013Z", "level": "INFO", "logger": "src.routers.orders", "message": "Using 'admin' database as it contains coupons", "module": "orders", "function": "validate_coupon_public", "line": 291}
{"timestamp": "2025-09-06T19:14:36.177486Z", "level": "INFO", "logger": "src.routers.orders", "message": "CouponService initialized with main database for order counting", "module": "orders", "function": "validate_coupon_public", "line": 299}
{"timestamp": "2025-09-06T19:14:36.178115Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf CALLING validate_coupon with: code=test60, amount=4, email=mrbrownaffilate@gmail.com", "module": "orders", "function": "validate_coupon_public", "line": 311}
{"timestamp": "2025-09-06T19:14:36.178568Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON START ===", "module": "coupon_service", "function": "validate_coupon", "line": 332}
{"timestamp": "2025-09-06T19:14:36.178868Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Input: code='test60', total=4, email='mrbrownaffilate@gmail.com'", "module": "coupon_service", "function": "validate_coupon", "line": 333}
{"timestamp": "2025-09-06T19:14:36.179092Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Accessing admin database through client for coupons", "module": "coupon_service", "function": "_get_coupons_collection", "line": 25}
{"timestamp": "2025-09-06T19:14:36.179384Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Searching for coupon with code: 'test60' (case-insensitive)", "module": "coupon_service", "function": "validate_coupon", "line": 342}
{"timestamp": "2025-09-06T19:14:36.242937Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Found coupon: test60 (ID: 68b843cabca9a42d16a1fdfc)", "module": "coupon_service", "function": "validate_coupon", "line": 350}
{"timestamp": "2025-09-06T19:14:36.243651Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d RAW Coupon data: {'_id': ObjectId('68b843cabca9a42d16a1fdfc'), 'code': 'test60', 'discountType': 'percentage', 'discountValue': 60.0, 'discountPercent': None, 'active': True, 'expiresAt': None, 'maxUses': 2, 'usageCount': 1, 'maxUsagePerUser': 1, 'createdAt': datetime.datetime(2025, 9, 3, 13, 34, 2, 254000, tzinfo=FixedOffset(datetime.timedelta(0), 'UTC')), 'usageAnalytics': {'total_orders': 1, 'completed': 0, 'cancelled': 0, 'pending': 0, 'processing': 0, 'awaiting_stock': 1, 'failed': 0}, 'userUsages': {'mrbrownaffiliate@gmail.com': 1}}", "module": "coupon_service", "function": "validate_coupon", "line": 351}
{"timestamp": "2025-09-06T19:14:36.244277Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Coupon fields: active=True, maxUses=2, maxUsagePerUser=1", "module": "coupon_service", "function": "validate_coupon", "line": 352}
{"timestamp": "2025-09-06T19:14:36.244664Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Discount: type=percentage, value=60.0", "module": "coupon_service", "function": "validate_coupon", "line": 353}
{"timestamp": "2025-09-06T19:14:36.245114Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d Per-user limit check: maxUsagePerUser=1 (type: <class 'int'>)", "module": "coupon_service", "function": "validate_coupon", "line": 371}
{"timestamp": "2025-09-06T19:14:36.245578Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d EFFECTIVE per-user limit: 1", "module": "coupon_service", "function": "validate_coupon", "line": 386}
{"timestamp": "2025-09-06T19:14:36.245816Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ufffd ENFORCING per-user limit of 1", "module": "coupon_service", "function": "validate_coupon", "line": 390}
{"timestamp": "2025-09-06T19:14:36.246413Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d ULTRA-RELIABLE USER COUNT: email='mrbrownaffilate@gmail.com', coupon='test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 79}
{"timestamp": "2025-09-06T19:14:36.635807Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "   \ud83d\udd04 No exact matches, trying case-insensitive regex...", "module": "coupon_service", "function": "get_user_usage_count", "line": 135}
{"timestamp": "2025-09-06T19:14:36.764880Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 TOTAL UNIQUE ORDERS FOUND: 0", "module": "coupon_service", "function": "get_user_usage_count", "line": 159}
{"timestamp": "2025-09-06T19:14:36.765156Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 USER CLEAN: mrbrownaffilate@gmail.com has NOT used 'test60'", "module": "coupon_service", "function": "get_user_usage_count", "line": 173}
{"timestamp": "2025-09-06T19:14:36.765484Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE QUERY: User mrbrownaffilate@gmail.com usage: 0", "module": "coupon_service", "function": "validate_coupon", "line": 414}
{"timestamp": "2025-09-06T19:14:36.765836Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf CRITICAL CHECK: User mrbrownaffilate@gmail.com usage: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 416}
{"timestamp": "2025-09-06T19:14:36.766078Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Per-user limit check: 0/1", "module": "coupon_service", "function": "validate_coupon", "line": 426}
{"timestamp": "2025-09-06T19:14:36.766245Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d STORED usage count: 1", "module": "coupon_service", "function": "validate_coupon", "line": 436}
{"timestamp": "2025-09-06T19:14:36.831323Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Real usage count for coupon 'test60': 0 orders found", "module": "coupon_service", "function": "get_real_usage_count", "line": 64}
{"timestamp": "2025-09-06T19:14:36.831872Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83d\udd0d DATABASE usage count: 0", "module": "coupon_service", "function": "validate_coupon", "line": 440}
{"timestamp": "2025-09-06T19:14:36.832407Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\ud83c\udfaf FINAL USAGE COUNT: 1 (stored: 1, db: 0)", "module": "coupon_service", "function": "validate_coupon", "line": 444}
{"timestamp": "2025-09-06T19:14:36.832922Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "VALIDATE_COUPON: Max usage check for 'test60': 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 446}
{"timestamp": "2025-09-06T19:14:36.833382Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "\u2705 PASSED: Overall usage check: 1/2", "module": "coupon_service", "function": "validate_coupon", "line": 453}
{"timestamp": "2025-09-06T19:14:36.833885Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Calculating discount: type=percentage, value=60.0, total=4", "module": "coupon_service", "function": "validate_coupon", "line": 461}
{"timestamp": "2025-09-06T19:14:36.834366Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "=== VALIDATE_COUPON SUCCESS ===", "module": "coupon_service", "function": "validate_coupon", "line": 471}
{"timestamp": "2025-09-06T19:14:36.834806Z", "level": "INFO", "logger": "src.services.coupon_service", "message": "Returning: discount=2.4, coupon_code='test60', error=None", "module": "coupon_service", "function": "validate_coupon", "line": 472}
{"timestamp": "2025-09-06T19:14:36.835212Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf validate_coupon returned: discount=2.4, coupon=True, error='None'", "module": "orders", "function": "validate_coupon_public", "line": 313}
{"timestamp": "2025-09-06T19:14:36.835580Z", "level": "INFO", "logger": "src.routers.orders", "message": "\ud83c\udfaf Coupon details: maxUsagePerUser=1, maxUses=2", "module": "orders", "function": "validate_coupon_public", "line": 317}
{"timestamp": "2025-09-06T19:14:36.836032Z", "level": "INFO", "logger": "src.routers.orders", "message": "\u2705 Coupon validation SUCCESSFUL: discount=2.4", "module": "orders", "function": "validate_coupon_public", "line": 337}
{"timestamp": "2025-09-06T19:14:44.208684Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login attempt with: evya00", "module": "users_collection", "function": "login", "line": 102}
{"timestamp": "2025-09-06T19:14:44.209005Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Attempting to find user by username: evya00", "module": "users_collection", "function": "login", "line": 120}
{"timestamp": "2025-09-06T19:14:44.291001Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "User found, verifying password for user: evya00", "module": "users_collection", "function": "login", "line": 134}
{"timestamp": "2025-09-06T19:14:44.632331Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login successful for user: evya00", "module": "users_collection", "function": "login", "line": 139}
{"timestamp": "2025-09-06T19:34:29.442469Z", "level": "INFO", "logger": "main", "message": "Starting application shutdown...", "module": "main", "function": "shutdown_event", "line": 230}
{"timestamp": "2025-09-06T19:34:29.443267Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Cleaning up database connections...", "module": "database_manager", "function": "cleanup_database", "line": 347}
{"timestamp": "2025-09-06T19:34:29.510351Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database cleanup completed", "module": "database_manager", "function": "cleanup_database", "line": 349}
{"timestamp": "2025-09-06T19:34:29.510760Z", "level": "INFO", "logger": "main", "message": "Application shutdown completed", "module": "main", "function": "shutdown_event", "line": 232}
{"timestamp": "2025-09-06T19:34:34.766399Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-06T19:34:34.766760Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-06T19:34:34.854897Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-06T19:34:34.855588Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-06T19:34:34.855933Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-06T19:34:36.969032Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-06T19:34:36.969509Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-06T19:34:36.970143Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-06T19:34:37.745030Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-06T19:53:21.269694Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-06T19:54:54.304883Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login attempt with: evya00", "module": "users_collection", "function": "login", "line": 102}
{"timestamp": "2025-09-06T19:54:54.305618Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Attempting to find user by username: evya00", "module": "users_collection", "function": "login", "line": 120}
{"timestamp": "2025-09-06T19:54:54.373118Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "User found, verifying password for user: evya00", "module": "users_collection", "function": "login", "line": 134}
{"timestamp": "2025-09-06T19:54:54.772700Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login successful for user: evya00", "module": "users_collection", "function": "login", "line": 139}
{"timestamp": "2025-09-06T20:28:33.218043Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me/orders", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-06T20:28:35.660670Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me/orders", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-06T20:52:27.141525Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-06T22:03:42.949791Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login attempt with: evya00", "module": "users_collection", "function": "login", "line": 102}
{"timestamp": "2025-09-06T22:03:42.951182Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Attempting to find user by username: evya00", "module": "users_collection", "function": "login", "line": 120}
{"timestamp": "2025-09-06T22:03:43.036880Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "User found, verifying password for user: evya00", "module": "users_collection", "function": "login", "line": 134}
{"timestamp": "2025-09-06T22:03:43.730193Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login successful for user: evya00", "module": "users_collection", "function": "login", "line": 139}
{"timestamp": "2025-09-07T07:13:13.913510Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-07T07:13:13.914409Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-07T07:13:14.015426Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-07T07:13:14.015796Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-07T07:13:14.016042Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-07T07:13:20.095050Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 1): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd308a49cd8faa399958f2, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:13:27.303405Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 2): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd309249cd8faa399958f3, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:13:36.474137Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 3): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd309b49cd8faa399958f4, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:13:49.585744Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 4): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30a849cd8faa399958f5, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:14:10.691964Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 5): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30bd49cd8faa399958f6, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:14:47.812968Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 6): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30e249cd8faa399958f7, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:14:47.997885Z", "level": "ERROR", "logger": "error_tracker", "message": "Exception occurred: ServerSelectionTimeoutError: No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30e249cd8faa399958f7, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "logging_config", "function": "capture_exception", "line": 196, "exception": {"type": "ServerSelectionTimeoutError", "message": "No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30e249cd8faa399958f7, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "traceback": "Traceback (most recent call last):\n  File \"C:\\Users\\User\\OneDrive\\\u05e9\u05d5\u05dc\u05d7\u05df \u05d4\u05e2\u05d1\u05d5\u05d3\u05d4\\\u05de\u05e1\u05de\u05db\u05d9\u05dd\\GitHub\\MonkeyZ\\backend\\src\\lib\\database_manager.py\", line 163, in connect\n    await self.client.admin.command('ping')\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\_csot.py\", line 120, in csot_wrapper\n    return func(self, *args, **kwargs)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\database.py\", line 906, in command\n    with self._client._conn_for_reads(read_preference, session, operation=command_name) as (\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1701, in _conn_for_reads\n    server = self._select_server(read_preference, session, operation)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1649, in _select_server\n    server = topology.select_server(\n        server_selector,\n    ...<2 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 397, in select_server\n    server = self._select_server(\n        selector,\n    ...<4 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 375, in _select_server\n    servers = self.select_servers(\n        selector, operation, server_selection_timeout, address, operation_id\n    )\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 282, in select_servers\n    server_descriptions = self._select_servers_loop(\n        selector, server_timeout, operation, operation_id, address\n    )\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 332, in _select_servers_loop\n    raise ServerSelectionTimeoutError(\n        f\"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}\"\n    )\npymongo.errors.ServerSelectionTimeoutError: No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd30e249cd8faa399958f7, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>"}}
{"timestamp": "2025-09-07T07:14:48.021356Z", "level": "ERROR", "logger": "src.lib.database_manager", "message": "Database initialization failed", "module": "database_manager", "function": "initialize_database", "line": 342}
{"timestamp": "2025-09-07T07:14:48.025408Z", "level": "ERROR", "logger": "main", "message": "Failed to initialize database connection", "module": "main", "function": "startup_event", "line": 216}
{"timestamp": "2025-09-07T07:15:28.434340Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-07T07:15:28.434938Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-07T07:15:28.528235Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-07T07:15:28.528852Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-07T07:15:28.529187Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-07T07:15:33.645626Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 1): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd3110553387c579ee571b, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:15:40.730971Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 2): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd3117553387c579ee571c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:15:49.872011Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 3): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd3120553387c579ee571d, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:16:02.983199Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 4): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd312d553387c579ee571e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:16:24.328220Z", "level": "WARNING", "logger": "src.lib.database_manager", "message": "Database connection failed (attempt 5): No replica set members found yet, Timeout: 5.0s, Topology Description: <TopologyDescription id: 68bd3143553387c579ee571f, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('mongodb1-0622d3f8.mongo.ondigitalocean.com', 27017) server_type: Unknown, rtt: None>]>", "module": "database_manager", "function": "connect", "line": 191}
{"timestamp": "2025-09-07T07:16:57.082737Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-07T07:16:57.083480Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-07T07:16:57.084611Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-07T07:16:58.007071Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-07T07:17:00.401958Z", "level": "INFO", "logger": "main", "message": "Starting application shutdown...", "module": "main", "function": "shutdown_event", "line": 230}
{"timestamp": "2025-09-07T07:17:00.402517Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Cleaning up database connections...", "module": "database_manager", "function": "cleanup_database", "line": 347}
{"timestamp": "2025-09-07T07:17:00.466667Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database cleanup completed", "module": "database_manager", "function": "cleanup_database", "line": 349}
{"timestamp": "2025-09-07T07:17:00.467083Z", "level": "INFO", "logger": "main", "message": "Application shutdown completed", "module": "main", "function": "shutdown_event", "line": 232}
{"timestamp": "2025-09-07T07:17:18.408333Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-07T07:17:18.408947Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-07T07:17:18.491895Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-07T07:17:18.492495Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-07T07:17:18.492968Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-07T07:17:19.474359Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-07T07:17:19.474644Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-07T07:17:19.474946Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-07T07:17:20.244051Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
{"timestamp": "2025-09-07T09:15:42.009969Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login attempt with: evya00", "module": "users_collection", "function": "login", "line": 102}
{"timestamp": "2025-09-07T09:15:42.010419Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Attempting to find user by username: evya00", "module": "users_collection", "function": "login", "line": 120}
{"timestamp": "2025-09-07T09:15:42.085132Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "User found, verifying password for user: evya00", "module": "users_collection", "function": "login", "line": 134}
{"timestamp": "2025-09-07T09:15:42.494800Z", "level": "INFO", "logger": "src.mongodb.users_collection", "message": "Login successful for user: evya00", "module": "users_collection", "function": "login", "line": 139}
{"timestamp": "2025-09-07T09:46:19.606762Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 133, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-09-08T08:30:50.103161Z", "level": "INFO", "logger": "root", "message": "Logging configured successfully", "module": "logging_config", "function": "setup_logging", "line": 162}
{"timestamp": "2025-09-08T08:30:50.104357Z", "level": "INFO", "logger": "main", "message": "Starting MonkeyZ API application...", "module": "main", "function": "<module>", "line": 36}
{"timestamp": "2025-09-08T08:30:50.199428Z", "level": "INFO", "logger": "src.middleware.security_middleware", "message": "Security middleware initialized (development: True)", "module": "security_middleware", "function": "__init__", "line": 110}
{"timestamp": "2025-09-08T08:30:50.199932Z", "level": "INFO", "logger": "main", "message": "Starting application initialization...", "module": "main", "function": "startup_event", "line": 212}
{"timestamp": "2025-09-08T08:30:50.200214Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Initializing database connection...", "module": "database_manager", "function": "initialize_database", "line": 337}
{"timestamp": "2025-09-08T08:30:52.241932Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database connection established successfully", "module": "database_manager", "function": "connect", "line": 177}
{"timestamp": "2025-09-08T08:30:52.242390Z", "level": "INFO", "logger": "src.lib.database_manager", "message": "Database initialization completed successfully", "module": "database_manager", "function": "initialize_database", "line": 340}
{"timestamp": "2025-09-08T08:30:52.242840Z", "level": "INFO", "logger": "main", "message": "Application initialization completed successfully", "module": "main", "function": "startup_event", "line": 225}
{"timestamp": "2025-09-08T08:30:53.038107Z", "level": "INFO", "logger": "root", "message": "Successfully initialized 3 database collections with Beanie ODM", "module": "user_controller", "function": "initialize", "line": 62}
