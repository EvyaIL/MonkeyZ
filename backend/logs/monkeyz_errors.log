{"timestamp": "2025-08-12T14:34:39.433861Z", "level": "ERROR", "logger": "error_tracker", "message": "Exception occurred: ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b50faa0ee8ae5bcba6523, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>", "module": "logging_config", "function": "capture_exception", "line": 196, "exception": {"type": "ServerSelectionTimeoutError", "message": "localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b50faa0ee8ae5bcba6523, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>", "traceback": "Traceback (most recent call last):\n  File \"D:\\Some Random Needful Shit\\OneDrive\\Documents\\GitHub\\MonkeyZ\\backend\\src\\lib\\database_manager.py\", line 111, in connect\n    await self.client.admin.command('ping')\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\_csot.py\", line 120, in csot_wrapper\n    return func(self, *args, **kwargs)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\database.py\", line 906, in command\n    with self._client._conn_for_reads(read_preference, session, operation=command_name) as (\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1701, in _conn_for_reads\n    server = self._select_server(read_preference, session, operation)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1649, in _select_server\n    server = topology.select_server(\n        server_selector,\n    ...<2 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 397, in select_server\n    server = self._select_server(\n        selector,\n    ...<4 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 375, in _select_server\n    servers = self.select_servers(\n        selector, operation, server_selection_timeout, address, operation_id\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 282, in select_servers\n    server_descriptions = self._select_servers_loop(\n        selector, server_timeout, operation, operation_id, address\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 332, in _select_servers_loop\n    raise ServerSelectionTimeoutError(\n        f\"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}\"\n    )\npymongo.errors.ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b50faa0ee8ae5bcba6523, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>"}}
{"timestamp": "2025-08-12T14:34:39.435390Z", "level": "ERROR", "logger": "root", "message": "Failed to connect to database: Failed to establish database connection", "module": "mongodb", "function": "connection", "line": 45}
{"timestamp": "2025-08-12T14:36:14.800160Z", "level": "ERROR", "logger": "error_tracker", "message": "Exception occurred: ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b515995d9e958b1b2ca61, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>", "module": "logging_config", "function": "capture_exception", "line": 196, "exception": {"type": "ServerSelectionTimeoutError", "message": "localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b515995d9e958b1b2ca61, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>", "traceback": "Traceback (most recent call last):\n  File \"D:\\Some Random Needful Shit\\OneDrive\\Documents\\GitHub\\MonkeyZ\\backend\\src\\lib\\database_manager.py\", line 111, in connect\n    auth_string = f\"{username}:{password}@\"\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\concurrent\\futures\\thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\_csot.py\", line 120, in csot_wrapper\n    return func(self, *args, **kwargs)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\database.py\", line 906, in command\n    with self._client._conn_for_reads(read_preference, session, operation=command_name) as (\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1701, in _conn_for_reads\n    server = self._select_server(read_preference, session, operation)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\mongo_client.py\", line 1649, in _select_server\n    server = topology.select_server(\n        server_selector,\n    ...<2 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 397, in select_server\n    server = self._select_server(\n        selector,\n    ...<4 lines>...\n        operation_id=operation_id,\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 375, in _select_server\n    servers = self.select_servers(\n        selector, operation, server_selection_timeout, address, operation_id\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 282, in select_servers\n    server_descriptions = self._select_servers_loop(\n        selector, server_timeout, operation, operation_id, address\n    )\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pymongo\\synchronous\\topology.py\", line 332, in _select_servers_loop\n    raise ServerSelectionTimeoutError(\n        f\"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}\"\n    )\npymongo.errors.ServerSelectionTimeoutError: localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms), Timeout: 5.0s, Topology Description: <TopologyDescription id: 689b515995d9e958b1b2ca61, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('localhost:27017: [WinError 10061] No connection could be made because the target machine actively refused it (configured timeouts: socketTimeoutMS: 10000.0ms, connectTimeoutMS: 10000.0ms)')>]>"}}
{"timestamp": "2025-08-12T14:36:14.801732Z", "level": "ERROR", "logger": "src.lib.database_manager", "message": "Database initialization failed", "module": "database_manager", "function": "initialize_database", "line": 290}
{"timestamp": "2025-08-12T14:36:14.801938Z", "level": "ERROR", "logger": "main", "message": "Failed to initialize database connection", "module": "main", "function": "startup_event", "line": 229}
{"timestamp": "2025-08-12T14:48:03.549693Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-08-12T14:48:03.870203Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-08-12T17:16:23.219984Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Product with id 'test' not found or error occurred.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/api/paypal/orders", "method": "POST", "status_code": 404}
{"timestamp": "2025-08-12T17:32:32.404024Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-08-12T17:32:32.555737Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-08-12T17:34:03.669061Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
{"timestamp": "2025-08-12T17:34:03.684208Z", "level": "ERROR", "logger": "main", "message": "Custom exception occurred: Could not validate credentials: Signature has expired.", "module": "main", "function": "custom_exception_handler", "line": 146, "endpoint": "/user/me", "method": "GET", "status_code": 401}
