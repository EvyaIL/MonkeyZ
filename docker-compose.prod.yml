version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Database
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DB_NAME=${MONGODB_DB_NAME:-monkeyz_production}
      
      # Email Service
      - MAIL_SERVER=${MAIL_SERVER:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM:-support@monkeyz.co.il}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-support@monkeyz.co.il}
      
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - SECRET_KEY=${SECRET_KEY:-${JWT_SECRET}}
      
      # PayPal (PRODUCTION)
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - PAYPAL_MODE=live
      
      # CORS & Frontend
      - FRONTEND_URL=${FRONTEND_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-${FRONTEND_URL}}
      
      # Production Settings
      - NODE_ENV=production
      - PYTHONPATH=/app
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - monkeyz-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - REACT_APP_FRONTEND_URL=${FRONTEND_URL}
      - GENERATE_SOURCEMAP=false
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - monkeyz-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - monkeyz-network

  # Optional: Redis for caching and sessions
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - monkeyz-network

volumes:
  redis-data:

networks:
  monkeyz-network:
    driver: bridge
