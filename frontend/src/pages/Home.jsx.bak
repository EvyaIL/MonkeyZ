import { useEffect, useState } from "react";
import ProductCard from "../components/product/ProductCard";
import ProductShowcase from "../components/product/ProductShowcase";
import { apiService } from "../lib/apiService";
import Spinner from "../components/Spinner";
import { useTranslation } from "react-i18next";
import { Helmet } from "react-helmet-async";
import { addStructuredData } from "../lib/seo-helper";

const Home = () => {
    id: 8,
    name: { en: "MonkeyZ Music Studio", he: "אולפן מוזיקה של MonkeyZ" },
    description: {
      en: "Create, mix, and share your music with our powerful studio suite.",
      he: "צרו, ערכו ושתפו מוזיקה עם חבילת האולפן העוצמתית שלנו.",
    },
    image: "https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80",
    price: 24.99,
    discountPercentage: 0,
    isNew: false,
    inStock: true
  },
];

const Home = () => {
  const [bestSellers, setBestSellers] = useState([]);
  const [recent, setRecent] = useState([]);
  const [homepageProducts, setHomepageProducts] = useState([]);
  const [loadingBest, setLoadingBest] = useState(true);
  const [loadingRecent, setLoadingRecent] = useState(true);
  const [loadingHomepage, setLoadingHomepage] = useState(true);
  const [errorBest, setErrorBest] = useState("");
  const [errorRecent, setErrorRecent] = useState("");
  const [errorHomepage, setErrorHomepage] = useState("");
  const { t } = useTranslation();

  useEffect(() => {
    getHomepageProducts();
    getBestSellers();
    getRecent();
    
    // Add structured data for the homepage
    const websiteSchema = {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "@id": "https://monkeyz.co.il/#website",
      "url": "https://monkeyz.co.il",
      "name": "MonkeyZ",
      "description": "Premium Digital Products & Services",
      "potentialAction": {
        "@type": "SearchAction",
        "target": "https://monkeyz.co.il/products?search={search_term_string}",
        "query-input": "required name=search_term_string"
      }
    };
    
    addStructuredData(websiteSchema);
    
    // Clean up when component unmounts
    return () => {
      const script = document.getElementById('structured-data');
      if (script) script.remove();
    };
    // eslint-disable-next-line
  }, []);

  useEffect(() => {
    document.title = t("home");
  }, [t]);
  const getHomepageProducts = async () => {
    setLoadingHomepage(true);
    setErrorHomepage("");
    try {
      const { data, error } = await apiService.get("/product/homepage");
      if (error || !data || !Array.isArray(data) || data.length === 0) {
        console.log("No products marked for homepage display, falling back to best sellers");
        setErrorHomepage(error ? t("failed_to_load_homepage_products") : t("no_homepage_products_found"));
        // We'll populate this later with best sellers as fallback if needed
        setHomepageProducts([]);
      } else {
        setHomepageProducts(data);
      }
    } catch (err) {
      console.error("Error fetching homepage products:", err);
      setErrorHomepage(t("failed_to_load_homepage_products"));
      setHomepageProducts([]);
    }
    setLoadingHomepage(false);
  };

  const getBestSellers = async () => {
    setLoadingBest(true);
    setErrorBest("");
    try {
      const { data, error } = await apiService.get("/product/best-sellers");
      if (error || !data || !Array.isArray(data) || data.length === 0) {
        console.log("No best seller products found");
        setErrorBest(error ? t("failed_to_load_best_sellers") : t("no_best_sellers_found"));
        setBestSellers([]);
      } else {
        setBestSellers(data);
        
        // If we have no homepage products, use best sellers as a fallback
        if (homepageProducts.length === 0 && !loadingHomepage) {
          setHomepageProducts(data);
        }
      }
    } catch (err) {
      console.error("Error fetching best sellers:", err);
      setErrorBest(t("failed_to_load_best_sellers"));
      setBestSellers([]);
    }
    setLoadingBest(false);
  };

  const getRecent = async () => {
    setLoadingRecent(true);
    setErrorRecent("");
    const params = { limit: 8 };
    try {
      const { data, error } = await apiService.get("/product/recent", params);
      if (error || !data || !Array.isArray(data) || data.length === 0) {
        console.log("No recent products found");
        setErrorRecent(error ? t("failed_to_load_recent_products") : t("no_recent_products_found"));
        setRecent([]);
      } else {
        setRecent(data);
      }
    } catch (err) {
      console.error("Error fetching recent products:", err);
      setErrorRecent(t("failed_to_load_recent_products"));
      setRecent([]);
    }
    setLoadingRecent(false);
  };

  return (
    <>
      <Helmet>
        <title>{`MonkeyZ - ${t("home")} | Premium Digital Products & Services`}</title>
        <meta name="description" content={t("home_meta_description") || "MonkeyZ offers premium digital products including software keys, VPN services, cloud storage, and security solutions. Fast delivery, reliable service, and 24/7 support."} />
        <meta name="keywords" content="MonkeyZ, digital products, software keys, VPN service, antivirus, cloud storage, password manager, premium software, online store" />
        <link rel="canonical" href="https://monkeyz.co.il/" />
        
        {/* Open Graph / Facebook */}
        <meta property="og:title" content={`MonkeyZ - ${t("home")} | Premium Digital Products & Services`} />
        <meta property="og:description" content={t("home_meta_description") || "MonkeyZ offers premium digital products including software keys, VPN services, cloud storage, and security solutions."} />
        <meta property="og:url" content="https://monkeyz.co.il/" />
        <meta property="og:type" content="website" />
        <meta property="og:image" content="https://monkeyz.co.il/og-image.jpg" />
        
        {/* Twitter Card */}
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content={`MonkeyZ - ${t("home")} | Premium Digital Products`} />
        <meta name="twitter:description" content={t("home_meta_description") || "MonkeyZ offers premium digital products including software keys, VPN services, cloud storage, and security solutions."} />
        <meta name="twitter:image" content="https://monkeyz.co.il/og-image.jpg" />
      </Helmet>
      <div className="min-h-screen flex flex-col items-center justify-center p-6">
        <h1 className="text-accent font-bold text-3xl mb-8" tabIndex={0}>
          {t("home")}
        </h1>        {/* Featured Homepage Products */}
        <section className="w-full max-w-6xl mb-12" aria-label={t("featured_products")}>
          {loadingHomepage ? (
            <div className="flex justify-center py-8 bg-white dark:bg-gray-800 border border-accent/30 dark:border-accent/30 rounded-lg shadow-lg p-4 md:p-6 backdrop-blur-sm">
              <Spinner />
            </div>
          ) : errorHomepage ? (
            <p className="text-error text-center bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-200 dark:border-gray-700" role="alert">
              {errorHomepage}
            </p>
          ) : homepageProducts.length > 0 ? (
            <ProductShowcase products={homepageProducts} title={t("featured_products")} />
          ) : (
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-200 dark:border-gray-700">
              <p className="text-center text-gray-600 dark:text-gray-400">
                {t("no_homepage_products")}
              </p>
              <p className="text-center text-sm mt-2 text-accent">
                {t("admin_can_mark_products_for_homepage")}
              </p>
            </div>
          )}
        </section>

        <section className="w-full max-w-6xl mb-12" aria-label={t("best_sellers")}>
          {loadingBest ? (
            <div className="flex justify-center py-8 bg-white dark:bg-gray-800 border border-accent/30 dark:border-accent/30 rounded-lg shadow-lg p-4 md:p-6 backdrop-blur-sm">
              <Spinner />
            </div>
          ) : errorBest ? (
            <p className="text-error text-center bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-200 dark:border-gray-700" role="alert">
              {errorBest}
            </p>
          ) : bestSellers.length > 0 ? (
            <ProductShowcase products={bestSellers} title={t("best_sellers")} />
          ) : (
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-200 dark:border-gray-700">
              <p className="text-center text-gray-600 dark:text-gray-400">
                {t("no_best_sellers")}
              </p>
              <p className="text-center text-sm mt-2 text-accent">
                {t("admin_can_mark_products_as_best_sellers")}
              </p>
            </div>
          )}
        </section>

        <section
          className="bg-white dark:bg-gray-800 border border-accent/30 dark:border-accent/30 rounded-lg shadow-lg p-4 md:p-6 w-full max-w-6xl mt-12 backdrop-blur-sm"
          aria-label={t("new_products")}
        >
          <h2 className="text-center text-accent font-bold text-3xl mb-8">
            {t("new_products")}
          </h2>
          {loadingRecent ? (
            <div className="flex justify-center py-8">
              <Spinner />
            </div>
          ) : errorRecent ? (
            <p className="text-error text-center text-lg p-4" role="alert">
              {errorRecent}
            </p>
          ) : recent.length > 0 ? (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 md:gap-8">
              {recent.map((product) => (
                <ProductCard key={product.id} product={product} />
              ))}
            </div>
          ) : (
            <div className="py-8">
              <p className="text-center text-gray-600 dark:text-gray-400">
                {t("no_recent_products")}
              </p>
              <p className="text-center text-sm mt-2 text-accent">
                {t("add_new_products")}
              </p>
            </div>
          )}
        </section>
      </div>
    </>
  );
};

export default Home;
